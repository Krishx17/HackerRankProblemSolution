/**
Problem : Java String Tokens 
Platform : HackerRank 
Date of Submission : 1 Jan 22
**/
import java.io.*;
import java.util.*;

public class JavaStringToken 
{

    public static void main(String[] args) 
    {
        Scanner scan = new Scanner(System.in);
        String s = scan.nextLine().trim();
        scan.close();
        
        if(s.length() == 0){
            System.out.println(0);
        }
        else{
            // Strip out non-word characters and replace with whitespace, trim leading/trailing whitespace
            s = s.replaceAll("[^\\p{Alpha}]+", " ").trim();
            
            if(s.isEmpty()) {
                // String contains no valid tokens
                System.out.println(0);
            }
            else {
                // Split the string into valid tokens
                String[] strings = s.split("\\p{Space}+");
                
                // Print number of tokens
                System.out.println(strings.length);
                
                // Print each token
                for(String str : strings){
                    System.out.println(str);
                }
            }
        }
    }
}

/*
Date : 10 / 1 / 2022
Question : Given an array , Firstly sort that Array than consequently Reverse that Array . 

public class Practice
{
    static int intArray[] = {20, 35, -15, 7, 55, 1, -22};
    public static void main(String[] args) {
        for (int i = 0; i < intArray.length; i++) {
            for (int j = 0; j < intArray.length - 1; j++) {
                int temp = 0;
                if (intArray[j] > intArray[j + 1]) {
                    temp = intArray[j];
                    intArray[j] = intArray[j + 1];
                    intArray[j + 1] = temp;
                }
            }
        }
        System.out.print("Sorted Array : ");
        for (int k = 0; k < intArray.length; k++) {
            System.out.print(intArray[k]+" ");
        }

        Practice user = new Practice();
        user.reverseArray(intArray);
    }
    static int revArr[] = new int[intArray.length];
    public static void reverseArray(int[] intArray)
    {   int count = 0;
        for(int i = intArray.length-1 ; i >= 0 ; i--)
        {
            revArr[count] = intArray[i];
            count++;
        }
        System.out.print("\nReversed Array : " );
        for(int i = 0 ; i < revArr.length ; i++)
        {
            System.out.print(revArr[i]+" ");
        }
    }

// the same question with the use of enhanced for loop 
public class Practice
{
    static int intArray[] = {20, 35, -15, 7, 55, 1, -22};
    public static void main(String[] args) {
        for (int i = 0; i < intArray.length; i++) {
            for (int j = 0; j < intArray.length - 1; j++) {
                int temp = 0;
                if (intArray[j] > intArray[j + 1]) {
                    temp = intArray[j];
                    intArray[j] = intArray[j + 1];
                    intArray[j + 1] = temp;
                }
            }
        }
        System.out.print("Sorted Array : {");
        for(int arrayElement : intArray)
        {
            System.out.print(arrayElement+" ");
        }
        System.out.print("}");

        Practice user = new Practice();
        user.reverseArray(intArray);
    }
    static int revArr[] = new int[intArray.length];
    public static void reverseArray(int[] intArray)
    {   int count = 0;
        for(int i = intArray.length-1 ; i >= 0 ; i--)
        {
            revArr[count] = intArray[i];
            count++;
        }
        System.out.print("\nReversed Array : { " );
        for(int arrayElement : revArr)
        {
            System.out.print(arrayElement + " ");
        }
        System.out.println("}");
    }

}
